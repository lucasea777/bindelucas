#!/usr/bin/env python3
"""Float to binary and Vice-versa.

Usage:
  floats.py <binary_or_float>

Examples:
  floats -1.1
  floats 0b10111111100011001100110011001101

"""
#from docopt import docopt
import sys
import click
import ctypes
def float2binary(n, double=False):
    mybuffer = ctypes.c_double(n) if double else ctypes.c_float(n)
    o = bin(ctypes.c_uint.from_buffer(mybuffer).value)[2:]
    return (32 - len(o))*'0' + o

@click.command()
@click.argument('n')
def main(n):
    """Simple program that greets NAME for a total of COUNT times."""
    assert len(n) == 1
    n = n[0]
    #print(arguments)
    #n = arguments['<binary_or_float>']
    try:
        f = float(n)
        isfloat = True
        b = float2binary(f)
        msg = '='*10 + "Float 32 (Single)" + '='*8 +'\n'
        exponent_bits = 8
        msg += f'exponent_bits = 8\n'
        bias = 2**(exponent_bits-1)-1
        msg += f'bias = 2^(exponent_bits-1)-1 = {bias}\n'
        msg += 'v = (-1)^sign (1.b51b50...b0)*2^(e-bias)\n'
        msg += f"Number: {f}\nBinary: 0b{b}\nDetail: {b[0]}  {b[1:9]}  {b[9:]}\n"
        msg += f"======: {'+' if b[0] == '0' else '-'}  {int(b[1:9], 2)}  {int(b[9:], 2)}\n"
        print(msg)
    except Exception as e:
        isfloat = False

@click.command()
@click.pass_context
def help(ctx):
    print(ctx.parent.get_help())

if __name__ == '__main__':
    #    arguments = docopt(__doc__, version='Naval Fate 2.0')
    sys.argv = [sys.argv[0], '--'] + [sys.argv[1:]]
    main()
    main.ad